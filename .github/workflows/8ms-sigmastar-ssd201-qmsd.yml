name: 8ms-sigmastar-ssd20x-qmsd 云编译

on: 
  repository_dispatch:
  workflow_dispatch:
  release:
    types: [published]
  push:
    tags:
    - 'v*'   
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update && sudo apt-get full-upgrade -y && sudo apt-get upgrade -y && sudo apt-get autoremove -y
        sudo apt-get install subversion build-essential libncurses5-dev zlib1g-dev gawk git ccache gettext libssl-dev xsltproc libxml-parser-perl gengetopt default-jre-headless ocaml-nox sharutils texinfo git gcc g++ make
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install zlib1g:i386 libstdc++6:i386 libc6:i386 libc6-dev-i386        
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
           bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
           git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
           libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
           mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils \
           rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo apt install build-essential ccache ecj fastjar file g++ gawk \
           gettext git java-propose-classpath libelf-dev libncurses5-dev \
           libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget \
           python-distutils-extra python3-setuptools python3-dev rsync subversion \
           swig time xsltproc zlib1g-dev
        sudo apt-get install lib32ncurses5-dev lib32z1-dev
        #sudo apt-get install gcc-arm-linux-gnueabi
        sudo apt-get install gcc-arm*    
    - name: Clone source code
      run: |
        cd ~
        git clone https://github.com/wireless-tag-com/8ms-sigmastar.git
        cd /opt
        sudo wget https://github.com/LV36/openwrt-ssd20x-toolchian/releases/download/2018.08/wt-gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf.tag.gz
        sudo tar -xvf wt-gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf.tag.gz
        sudo chmod 777 ~/.profile
        sudo echo -e '\nexport PATH=/opt/gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf/bin:$PATH\n' >> ~/.profile
        source ~/.profile
        arm-linux-gnueabihf-gcc --version       
    - name: Build Firmware
      run: |
        cd ~/8ms-sigmastar
        make CHIP=ssd20x
        tar -czvf 8ms-sigmastar-ssd20x-qmsd.tar.gz ~/8ms-sigmastar/bin/qmsd-demo/*
    - name : Upload packages
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: 8ms-sigmastar-ssd20x-qmsd
        path: ~/8ms-sigmastar/bin/qmsd-demo/
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "8ms-sigmastar-ssd20x-qmsd"
        files: ~/8ms-sigmastar-ssd20x-qmsd.tar.gz
